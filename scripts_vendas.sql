-- MySQL Script generated by MySQL Workbench
-- dom 22 out 2017 22:44:44 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Vendas_bd
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Vendas_bd
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Vendas_bd` DEFAULT CHARACTER SET utf8 ;
USE `Vendas_bd` ;

-- -----------------------------------------------------
-- Table `Vendas_bd`.`fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Vendas_bd`.`fornecedor` (
  `idfornecedor` INT NOT NULL,
  `nomefornecedor` VARCHAR(45) NOT NULL,
  `enderecofornecedor` VARCHAR(45) NOT NULL,
  `telefonefornecedor` VARCHAR(45) NOT NULL,
  `emailfornecedor` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idfornecedor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Vendas_bd`.`lote`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Vendas_bd`.`lote` (
  `idlote` INT NOT NULL,
  `entradalote` DATETIME NOT NULL,
  `fornecedor_idfornecedor` INT NOT NULL,
  PRIMARY KEY (`idlote`),
  INDEX `fk_lote_fornecedor1_idx` (`fornecedor_idfornecedor` ASC),
  CONSTRAINT `fk_lote_fornecedor1`
    FOREIGN KEY (`fornecedor_idfornecedor`)
    REFERENCES `Vendas_bd`.`fornecedor` (`idfornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Vendas_bd`.`estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Vendas_bd`.`estoque` (
  `iddeestoque` INT NOT NULL,
  `quantidadeestoque` DOUBLE NOT NULL,
  PRIMARY KEY (`iddeestoque`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Vendas_bd`.`produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Vendas_bd`.`produto` (
  `idproduto` INT NOT NULL,
  `nomeproduto` VARCHAR(45) NOT NULL,
  `tipoproduto` VARCHAR(45) NOT NULL,
  `valorproduto` DOUBLE NOT NULL,
  `vencimentoproduto` DATETIME NOT NULL,
  `lote_idlote` INT NOT NULL,
  `estoque_idestoque` INT NOT NULL,
  PRIMARY KEY (`idproduto`),
  INDEX `fk_produto_lote_idx` (`lote_idlote` ASC),
  INDEX `fk_produto_departamento1_idx` (`estoque_idestoque` ASC),
  CONSTRAINT `fk_produto_lote`
    FOREIGN KEY (`lote_idlote`)
    REFERENCES `Vendas_bd`.`lote` (`idlote`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_departamento1`
    FOREIGN KEY (`estoque_idestoque`)
    REFERENCES `Vendas_bd`.`estoque` (`iddeestoque`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Vendas_bd`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Vendas_bd`.`cliente` (
  `cpfcliente` INT NOT NULL,
  `nomecliente` VARCHAR(45) NOT NULL,
  `enderecocliente` VARCHAR(45) NOT NULL,
  `telefonecliente` VARCHAR(45) NOT NULL,
  `dataentradacliente` DATETIME NOT NULL,
  `emailcliente` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`cpfcliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Vendas_bd`.`funcionariotipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Vendas_bd`.`funcionariotipo` (
  `idtipo` INT NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idtipo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Vendas_bd`.`funcionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Vendas_bd`.`funcionario` (
  `cpffuncionario` INT NOT NULL,
  `nomefuncionario` VARCHAR(45) NOT NULL,
  `enderecofuncionario` VARCHAR(45) NOT NULL,
  `telefonefuncionario` VARCHAR(45) NOT NULL,
  `emailfuncionario` VARCHAR(45) NOT NULL,
  `sexofuncionario` VARCHAR(1) NOT NULL,
  `salariobase` DOUBLE NOT NULL,
  `dataadmissao` DATETIME NOT NULL,
  `datasaida` DATETIME NOT NULL,
  `tipo_idtipo` INT NOT NULL,
  PRIMARY KEY (`cpffuncionario`),
  INDEX `fk_funcionario_funcionariotipo1_idx` (`tipo_idtipo` ASC),
  CONSTRAINT `fk_funcionario_funcionariotipo1`
    FOREIGN KEY (`tipo_idtipo`)
    REFERENCES `Vendas_bd`.`funcionariotipo` (`idtipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Vendas_bd`.`caixa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Vendas_bd`.`caixa` (
  `idcaixa` INT NOT NULL,
  `datamovimentacao` DATETIME NOT NULL,
  `funcionario_cpffuncionario` INT NOT NULL,
  PRIMARY KEY (`idcaixa`, `funcionario_cpffuncionario`),
  INDEX `fk_caixa_funcionario1_idx` (`funcionario_cpffuncionario` ASC),
  CONSTRAINT `fk_caixa_funcionario1`
    FOREIGN KEY (`funcionario_cpffuncionario`)
    REFERENCES `Vendas_bd`.`funcionario` (`cpffuncionario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Vendas_bd`.`notafiscal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Vendas_bd`.`notafiscal` (
  `produto_idproduto` INT NOT NULL,
  `cliente_cpfcliente` INT NOT NULL,
  `caixa_idcaixa` INT NOT NULL,
  `valortotal` DOUBLE NOT NULL,
  `datanotafiscal` DATETIME NOT NULL,
  PRIMARY KEY (`produto_idproduto`, `cliente_cpfcliente`, `caixa_idcaixa`),
  INDEX `fk_produto_has_cliente_cliente1_idx` (`cliente_cpfcliente` ASC),
  INDEX `fk_produto_has_cliente_produto1_idx` (`produto_idproduto` ASC),
  INDEX `fk_notafiscal_caixa1_idx` (`caixa_idcaixa` ASC),
  CONSTRAINT `fk_produto_has_cliente_produto1`
    FOREIGN KEY (`produto_idproduto`)
    REFERENCES `Vendas_bd`.`produto` (`idproduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_has_cliente_cliente1`
    FOREIGN KEY (`cliente_cpfcliente`)
    REFERENCES `Vendas_bd`.`cliente` (`cpfcliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notafiscal_caixa1`
    FOREIGN KEY (`caixa_idcaixa`)
    REFERENCES `Vendas_bd`.`caixa` (`idcaixa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Vendas_bd`.`abastecimento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Vendas_bd`.`abastecimento` (
  `estoque_idestoque` INT NOT NULL,
  `funcionario_cpffuncionario` INT NOT NULL,
  `dataabastecimento` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`estoque_idestoque`, `funcionario_cpffuncionario`),
  INDEX `fk_abastecimento_departamento1_idx` (`estoque_idestoque` ASC),
  INDEX `fk_abastecimento_funcionario1_idx` (`funcionario_cpffuncionario` ASC),
  CONSTRAINT `fk_abastecimento_departamento1`
    FOREIGN KEY (`estoque_idestoque`)
    REFERENCES `Vendas_bd`.`estoque` (`iddeestoque`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_abastecimento_funcionario1`
    FOREIGN KEY (`funcionario_cpffuncionario`)
    REFERENCES `Vendas_bd`.`funcionario` (`cpffuncionario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Vendas_bd`.`promocao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Vendas_bd`.`promocao` (
  `idpromocao` INT NOT NULL,
  `datainicio` DATETIME NOT NULL,
  `datafim` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idpromocao`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Vendas_bd`.`historicopromocao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Vendas_bd`.`historicopromocao` (
  `produto_idproduto` INT NOT NULL,
  `promocao_idpromocao` INT NOT NULL,
  PRIMARY KEY (`produto_idproduto`, `promocao_idpromocao`),
  INDEX `fk_produto_has_promocao_promocao1_idx` (`promocao_idpromocao` ASC),
  INDEX `fk_produto_has_promocao_produto1_idx` (`produto_idproduto` ASC),
  CONSTRAINT `fk_produto_has_promocao_produto1`
    FOREIGN KEY (`produto_idproduto`)
    REFERENCES `Vendas_bd`.`produto` (`idproduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_has_promocao_promocao1`
    FOREIGN KEY (`promocao_idpromocao`)
    REFERENCES `Vendas_bd`.`promocao` (`idpromocao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
